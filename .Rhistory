activity = read.csv("activity.csv")
View(activity)
aggregate(activity$steps, by=list(Category=activity$steps), FUN=sum)
aggregate(activity$steps, by=list(Category=activity$date), FUN=sum)
activity = read.csv("activity.csv", na.strings = FALSE)
View(activity)
?read.csv
activity = read.csv("activity.csv", na.strings = 0)
View(activity)
activity = read.csv("activity.csv")
?aggregate
aggregate(activity$steps, by=list(Category=activity$date), FUN=sum
)
activity = aggregate(activity$steps, by=list(Category=activity$date), FUN=sum)
hist(activity)
hist(activity$x)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps")
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 10)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 100)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 25)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 15)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 20)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 25)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of daily steps", xlab = "Number of daily steps", 20)
mean(activity$x)
mean(activity$x, na.rm = TRUE)
median(activity$x, na.rm = TRUE)
hist(activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of total daily steps", xlab = "Number of total daily steps", 20)
?tapply
activity = read.csv("activity.csv")
agg_activity = aggregate(activity$steps, by=list(Category=activity$date), FUN=sum)
hist(agg_activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of total daily steps", xlab = "Number of total daily steps", 20)
avg_steps = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum)
avg_steps
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum)
hours = as.numeric(names(agg_activity))/60
names(agg_activity)
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum)
View(agg_activity)
View(activity)
View(activity)
agg_activity = aggregate(activity$steps, by=list(Category=activity$date), FUN=sum)
View(agg_activity)
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum)
View(agg_activity)
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum, na.rm=TRUE)
hours = agg_activity$Category/60
plot(hours, agg_activity)
plot(agg_activity$Category, agg_activity$x)
plot(agg_activity$Category/60, agg_activity$x)
plot(agg_activity$Category, agg_activity$x, type="l", axes=F, xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(agg_activity$Category, agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(agg_activity$Category, agg_activity$x, type="l", axes=F, xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
axis(2)
axis(1, at=0:6*4, labels=paste(0:6*4,":00", sep=""))
plot(agg_activity$Category, agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
?time
?timestamp
library(chron)
install.packages(chron)
install.packages("chron")
library(chron)
?times
times(activity$interval)
activity = read.csv("activity.csv")
activity$interval = times(activity$interval)
agg_activity = aggregate(activity$steps, by=list(Category=activity$date), FUN=sum, na.rm=TRUE)
View(activity)
hist(agg_activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of total daily steps", xlab = "Number of total daily steps", 20)
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum, na.rm=TRUE)
plot(agg_activity$Category, agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
activity = read.csv("activity.csv")
times(activity$interval)
activity = read.csv("activity.csv")
activity$interval
install.packages("chron")
install.packages("chron")
library(chron)
times(activity$interval)
times(100)
times(10)
times(109)
times(c(10, 109)
)
format(as.POSIXct((activity$interval) * 86400, origin = "1970-01-01", tz = "UTC"), "%H:%M")
library(lubridate)
hms::as.hms(0)
hms::as.hms(100)
hms::as.hms(activity$interval)
hms::as.hms(activity$interval * 60)
library(readr)
parse_time(activity$interval, "%H%M")
parse_time(as.character(activity$interval), "%H%M")
temp = sprintf("%04d", activity$interval)
format(strptime(temp, format="%H%M"), format = "%H:%M")
activity = read.csv("activity.csv")
View(activity)
activity$interval = format(strptime(sprintf("%04d", activity$interval), format="%H%M"), format = "%H:%M")
agg_activity = aggregate(activity$steps, by=list(Category=activity$date), FUN=sum, na.rm=TRUE)
hist(agg_activity$x, col = "darkorange", border = "dodgerblue", main = "Histogram of total daily steps", xlab = "Number of total daily steps", 20)
agg_activity = aggregate(activity$steps, by=list(Category=activity$interval), FUN=sum, na.rm=TRUE)
plot(agg_activity$Category, agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
View(agg_activity)
plot(agg_activity)
plot(as.character(agg_activity$Category), agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
typeof(agg_activity$Category)
?plot
View(agg_activity)
plot(as.factor(agg_activity$Category), agg_activity$x, type="l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(as.factor(agg_activity$Category), agg_activity$x, xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
which(agg_activity$x==max(agg_activity$x))
max(agg_activity$x)
which(agg_activity==max(agg_activity))
which(agg_activity$Category==max(agg_activity$x))
which(agg_activity$x==max(agg_activity$x))
max(agg_activity$x)
agg_activity$Category[3]
agg_activity[3]
agg_activity[,3]
agg_activity$Category[max(agg_activity$x)]
agg_activity$Category[which.max(agg_activity$x)]
plot(as.factor(agg_activity$Category), agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(agg_activity$Category, agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(as.character(agg_activity$Category), agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(as.character.Date(agg_activity$Category), agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(as.factor(agg_activity$Category), agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot")
plot(agg_activity$Category, agg_activity$x, type = "l", xlab="Time", ylab="Avg. Number of steps", main="Time Series Plot", na.rm = FALSE)
activity$steps[4]
activity$steps[100]
activity$steps[1000]
activity$steps[900]
activity$steps[800]
is.na(activity$steps[800]
)
is.na(activity$steps[100])
for (i in activity$interval) {
if (is.na(activity$steps[i])) {
activity$steps[i] = mean(activity$steps)
}
}
mean(activity$steps)
mean(activity$steps, na.rm = TRUE)
for (i in activity$interval) {
if (is.na(activity$steps[i])) {
activity$steps[i] = mean(activity$steps, na.rm = TRUE)
}
}
for (i in activity$date) {
if (is.na(activity$steps[i])) {
activity$steps[i] = mean(activity$steps, na.rm = TRUE)
}
}
for (i in activity$date) {
if (is.na(activity$steps[i])) {
activity$steps[i] = median(activity$steps, na.rm = TRUE)
}
}
